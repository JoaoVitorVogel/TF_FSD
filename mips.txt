4194304  0x01084026  xor $8,$8,$8          9        xor	$t0,$t0,$t0 	# zera o $t0 = (i)
4194308  0x01294826  xor $9,$9,$9          10       xor	$t1,$t1,$t1	    # zera o $t1 = variavel vetor A
4194312  0x014a5026  xor $10,$10,$10       11       xor	$t2,$t2,$t2    	# zera o $t2 = variavel vetor B
4194316  0x016b5826  xor $11,$11,$11       12       xor	$t3,$t3,$t3	    # zera o $t3 = resultado de operação
4194320  0x018c6026  xor $12,$12,$12       13       xor	$t4,$t4,$t4	    # zera o $t4 = endereço vetor A
4194324  0x01ad6826  xor $13,$13,$13       14       xor	$t5,$t5,$t5	    # zera o $t5 = endereço vetor B
4194328  0x01ce7026  xor $14,$14,$14       15       xor	$t6,$t6,$t6     # zera o $t6 = endereço vetor C
4194332  0x3c011001  lui $1,4097           17       la  $t4, a          # $t4 recebe o endereço de A(i)
4194336  0x342c0000  ori $12,$1,0               
4194340  0x3c011001  lui $1,4097           18       la  $t5, b          # $t5 recebe o endereço de B(i)
4194344  0x342d0028  ori $13,$1,40              
4194348  0x3c011001  lui $1,4097           19       la  $t6, c          # $t6 recebe o endereço de C(i)
4194352  0x342e0050  ori $14,$1,80              
4194356  0x8d890000  lw $9,0($12)          21       lw  $t1, 0($t4)     # $t1 recebe o valor de A(i)
4194360  0x8daa0000  lw $10,0($13)         22       lw  $t2, 0($t5)     # $t2 recebe o valor de B(i)
4194364  0x012a5820  add $11,$9,$10        24       add $t3, $t1, $t2   # $t3 recebe ($t1 + $t2)
4194368  0xadcb0000  sw $11,0($14)         25       sw  $t3, 0($t6)     # guarda $t3 na memoria C(i)
4194372  0x21080001  addi $8,$8,1          27       add	$t0,$t0,1	    # incrementa o (i)
4194376  0x218c0004  addi $12,$12,4        28       add	$t4,$t4,4	    # incrementa o endereço de A (+4 porque é uma word)
4194380  0x21ad0004  addi $13,$13,4        29   	add	$t5,$t5,4	    # incrementa o endereço de B (+4 porque é uma word)
4194384  0x21ce0004  addi $14,$14,4        30       add	$t6,$t6,4	    # incrementa o endereço de D (+4 porque é uma word)
4194388  0x2901000a  slti $1,$8,10         32       blt	$t0, 10, soma	# pula para a "soma" se i < n ($t0 < 10)
4194392  0x1420fff6  bne $1,$0,-10              
4194396  0x01084026  xor $8,$8,$8          35       xor	$t0,$t0,$t0 	# zera o $t0 = (i)
4194400  0x01294826  xor $9,$9,$9          36       xor	$t1,$t1,$t1	    # zera o $t1 = variavel vetor A
4194404  0x014a5026  xor $10,$10,$10       37       xor	$t2,$t2,$t2    	# zera o $t2 = variavel vetor B
4194408  0x016b5826  xor $11,$11,$11       38       xor	$t3,$t3,$t3	    # zera o $t3 = resultado de operação
4194412  0x018c6026  xor $12,$12,$12       39       xor	$t4,$t4,$t4	    # zera o $t4 = endereço vetor A
4194416  0x01ad6826  xor $13,$13,$13       40       xor	$t5,$t5,$t5	    # zera o $t5 = endereço vetor B
4194420  0x01ce7026  xor $14,$14,$14       41       xor	$t6,$t6,$t6     # zera o $t6 = endereço vetor D
4194424  0x3c011001  lui $1,4097           43       la  $t4, a          # $t4 recebe o endereço de A(i)
4194428  0x342c0000  ori $12,$1,0               
4194432  0x3c011001  lui $1,4097           44       la  $t5, b          # $t5 recebe o endereço de B(i)
4194436  0x342d0028  ori $13,$1,40              
4194440  0x3c011001  lui $1,4097           45       la  $t6, d          # $t6 recebe o endereço de D(i)
4194444  0x342e0078  ori $14,$1,120             
4194448  0x8d890000  lw $9,0($12)          47       lw  $t1, 0($t4)     # $t1 recebe o valor de A(i)
4194452  0x8daa0000  lw $10,0($13)         48       lw  $t2, 0($t5)     # $t2 recebe o valor de B(i)
4194456  0x012a5822  sub $11,$9,$10        50       sub $t3, $t1, $t2   # $t3 recebe ($t1 - $t2)
4194460  0xadcb0000  sw $11,0($14)         51       sw  $t3, 0($t6)     # guarda $t3 na memoria D(i)
4194464  0x21080001  addi $8,$8,1          53       add	$t0,$t0,1	    # incrementa o (i)
4194468  0x218c0004  addi $12,$12,4        54       add	$t4,$t4,4	    # incrementa o endereço de A (+4 porque é uma word)
4194472  0x21ad0004  addi $13,$13,4        55   	add	$t5,$t5,4	    # incrementa o endereço de B (+4 porque é uma word)
4194476  0x21ce0004  addi $14,$14,4        56       add	$t6,$t6,4	    # incrementa o endereço de D (+4 porque é uma word)
4194480  0x2901000a  slti $1,$8,10         58       blt	$t0, 10, subtrai # pula para o "subtrai" se i < n ($t0 < 10)
4194484  0x1420fff6  bne $1,$0,-10              
4194488  0x01084026  xor $8,$8,$8          61       xor	$t0,$t0,$t0 	# zera o $t0 = (i)
4194492  0x01294826  xor $9,$9,$9          62       xor	$t1,$t1,$t1	    # zera o $t1 = variavel vetor C
4194496  0x014a5026  xor $10,$10,$10       63       xor	$t2,$t2,$t2    	# zera o $t2 = variavel vetor D
4194500  0x016b5826  xor $11,$11,$11       64       xor	$t3,$t3,$t3	    # zera o $t3 = resultado de operação
4194504  0x018c6026  xor $12,$12,$12       65       xor	$t4,$t4,$t4	    # zera o $t4 = endereço vetor C
4194508  0x01ad6826  xor $13,$13,$13       66       xor	$t5,$t5,$t5	    # zera o $t5 = endereço vetor D
4194512  0x01ce7026  xor $14,$14,$14       67       xor	$t6,$t6,$t6	    # zera o $t6 = endereço de mv
4194516  0x3c011001  lui $1,4097           69       la  $t4, c          # $t4 recebe o endereço de C(i)
4194520  0x342c0050  ori $12,$1,80              
4194524  0x3c011001  lui $1,4097           70       la  $t5, d          # $t5 recebe o endereço de D(i)
4194528  0x342d0078  ori $13,$1,120             
4194532  0x3c011001  lui $1,4097           71       la  $t6, mv         # $t6 recebe o endereço de mv
4194536  0x342e00a0  ori $14,$1,160             
4194540  0x8d890000  lw $9,0($12)          73       lw  $t1, 0($t4)     # $t1 recebe o valor de C(i)
4194544  0x8daa0000  lw $10,0($13)         74       lw  $t2, 0($t5)     # $t2 recebe o valor de D(i)
4194548  0x012b082a  slt $1,$9,$11         76       blt	$t1, $t3, proximoMaiorC # pula para o "proximoMaiorC" se $t1 < $t3 (c < mv)
4194552  0x14200001  bne $1,$0,1                
4194556  0x212b0000  addi $11,$9,0         77       add $t3, $t1, 0
4194560  0x014b082a  slt $1,$10,$11        80       blt	$t2, $t3, proximoMaiorD # pula para o "proximoMaiorD" se $t2 < $t3 (d < mv)
4194564  0x14200001  bne $1,$0,1                
4194568  0x212b0000  addi $11,$9,0         81       add $t3, $t1, 0
4194572  0x21080001  addi $8,$8,1          84       add	$t0,$t0,1	    # incrementa o (i)
4194576  0x218c0004  addi $12,$12,4        85       add	$t4,$t4,4	    # incrementa o endereço de A (+4 porque é uma word)
4194580  0x21ad0004  addi $13,$13,4        86   	add	$t5,$t5,4	    # incrementa o endereço de B (+4 porque é uma word)
4194584  0x2901000a  slti $1,$8,10         88       blt	$t0, 10, maior  # pula para o "maior" se i < n ($t0 < 10)
4194588  0x1420fff3  bne $1,$0,-13              
4194592  0xadcb0000  sw $11,0($14)         90       sw  $t3, 0($t6)     # guarda $t3 na memoria mv
4194596  0x01084026  xor $8,$8,$8          94       xor	$t0,$t0,$t0 	# zera o $t0 = (i)
4194600  0x01294826  xor $9,$9,$9          95       xor	$t1,$t1,$t1	    # zera o $t1 = variavel vetor C
4194604  0x014a5026  xor $10,$10,$10       96       xor	$t2,$t2,$t2    	# zera o $t2 = variavel vetor D
4194608  0x016b5826  xor $11,$11,$11       97       xor	$t3,$t3,$t3	    # zera o $t3 = resultado de operação
4194612  0x018c6026  xor $12,$12,$12       98       xor	$t4,$t4,$t4	    # zera o $t4 = endereço vetor C
4194616  0x01ad6826  xor $13,$13,$13       99       xor	$t5,$t5,$t5	    # zera o $t5 = endereço vetor D
4194620  0x01ce7026  xor $14,$14,$14       100      xor	$t6,$t6,$t6	    # zera o $t6 = endereço de st
4194624  0x3c011001  lui $1,4097           102      la  $t4, c          # $t4 recebe o endereço de C(i)
4194628  0x342c0050  ori $12,$1,80              
4194632  0x3c011001  lui $1,4097           103      la  $t5, d          # $t5 recebe o endereço de D(i)
4194636  0x342d0078  ori $13,$1,120             
4194640  0x3c011001  lui $1,4097           104      la  $t6, st         # $t5 recebe o endereço de st
4194644  0x342e00a4  ori $14,$1,164             
4194648  0x8d890000  lw $9,0($12)          106      lw  $t1, 0($t4)     # $t1 recebe o valor de C(i)
4194652  0x8daa0000  lw $10,0($13)         107      lw  $t2, 0($t5)     # $t2 recebe o valor de D(i)
4194656  0x01695820  add $11,$11,$9        109      add $t3, $t3, $t1   # $t3 recebe ele mais $t1
4194660  0x016a5820  add $11,$11,$10       110      add $t3, $t3, $t2   # $t3 recebe ele mais $t2
4194664  0x21080001  addi $8,$8,1          112      add	$t0,$t0,1	    # incrementa o (i)
4194668  0x218c0004  addi $12,$12,4        113      add	$t4,$t4,4	    # incrementa o endereço de A (+4 porque é uma word)
4194672  0x21ad0004  addi $13,$13,4        114  	add	$t5,$t5,4	    # incrementa o endereço de B (+4 porque é uma word)
4194676  0x2901000a  slti $1,$8,10         116      blt	$t0, 10, somaTotal	# pula para a "somaTotal" se i < n ($t0 < 10)
4194680  0x1420fff7  bne $1,$0,-9               
4194684  0xadcb0000  sw $11,0($14)         118      sw  $t3, 0($t6)     # guarda $t3 na memoria mv
4194688  0x01084026  xor $8,$8,$8          121      xor	$t0,$t0,$t0 	# zera o $t0 = (i)
4194692  0x01294826  xor $9,$9,$9          122      xor	$t1,$t1,$t1	    # zera o $t1 = variavel mv
4194696  0x014a5026  xor $10,$10,$10       123      xor	$t2,$t2,$t2    	# zera o $t2 = variavel st
4194700  0x016b5826  xor $11,$11,$11       124      xor	$t3,$t3,$t3	    # zera o $t3 = resultado de operação
4194704  0x018c6026  xor $12,$12,$12       125      xor	$t4,$t4,$t4	    # zera o $t4 = endereço mv
4194708  0x01ad6826  xor $13,$13,$13       126      xor	$t5,$t5,$t5	    # zera o $t5 = endereço st
4194712  0x01ce7026  xor $14,$14,$14       127      xor	$t6,$t6,$t6	    # zera o $t6 = endereço sm
4194716  0x3c011001  lui $1,4097           129      la  $t4, mv         # $t4 recebe o endereço de mv
4194720  0x342c00a0  ori $12,$1,160             
4194724  0x3c011001  lui $1,4097           130      la  $t5, st         # $t5 recebe o endereço de st
4194728  0x342d00a4  ori $13,$1,164             
4194732  0x8d890000  lw $9,0($12)          131      lw  $t1, 0($t4)     # $t1 recebe o valor de mv
4194736  0x8daa0000  lw $10,0($13)         132      lw  $t2, 0($t5)     # $t2 recebe o valor de st
4194740  0x3c011001  lui $1,4097           133      la  $t6, sm         # $t5 recebe o endereço de sm
4194744  0x342e00a8  ori $14,$1,168             
4194748  0x016a5820  add $11,$11,$10       136      add $t3, $t3, $t2   # $t3 recebe ele mais $t2
4194752  0x21080001  addi $8,$8,1          138      add	$t0,$t0,1	    # incrementa o (i)
4194756  0x0109082a  slt $1,$8,$9          140      blt	$t0, $t1, multiplica    # pula para o "multiplica" se i < n ($t0 < 10)
4194760  0x1420fffc  bne $1,$0,-4               
4194764  0xadcb0000  sw $11,0($14)         142      sw  $t3, 0($t6)     # guarda $t3 na memoria sm
4194768  0x08100074  j 4194768             144  end:	j	end



268500992              7          15           9          22           5          -3          -6         -17 
268501024             -1         -21          16          13           5           9          54          -4 
268501056             -5          -8          -2         -12          23          28          14          31 
268501088             59          -7         -11         -25          -3         -33          -9           2 
268501120              4          13         -49           1          -1          -9           1          -9 
268501152             59          20        1180           0           0           0           0           0 
268501184              0           0           0           0           0           0           0           0 
268501216              0           0           0           0           0           0           0           0 
268501248              0           0           0           0           0           0           0           0 
268501280              0           0           0           0           0           0           0           0 
268501312              0           0           0           0           0           0           0           0 
268501344              0           0           0           0           0           0           0           0 
268501376              0           0           0           0           0           0           0           0 
268501408              0           0           0           0           0           0           0           0 
268501440              0           0           0           0           0           0           0           0 